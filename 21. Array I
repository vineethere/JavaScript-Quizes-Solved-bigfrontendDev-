// https://bigfrontend.dev/quiz/Array-I
const a = [0]
console.log(a.length)
a[3] = 3
console.log(a.length)
for (let item of a) {
  console.log(item)
}
a.map(item => {console.log(item)})
a.forEach(item => {console.log(item)})
console.log(Object.keys(a))
delete a[3]
console.log(a.length)
a[2] = 2
a.length = 1
console.log(a[0],a[1],a[2])






//  Iterations
// for (let item of a) {
//   console.log(item);
// }
// // Output:
// // 0
// // 3
// Note: The for...of loop skips holes (i.e., uninitialized indices), so it only prints the initialized elements.

// a.map(item => { console.log(item); });
// // Output:
// // 0
// // undefined
// // undefined
// // 3
// .map() doesn't skip holes, but it passes undefined for them.

// a.forEach(item => { console.log(item); });
// // Output:
// // 0
// // 3
// .forEach() skips holes like for...of.
// Also
// The delete operator removes the property a[3] from the array, but it does NOT affect the array's length.

// So now a[3] is gone (it becomes a hole), but length remains at 4.

// âœ… Key concept:

// In JavaScript arrays, length is always 1 more than the highest index ever assigned, regardless of whether the element at that index still exists.

// Solution
// 1
// 4
// 0
// undefined
// undefined
// 3
// 0
// 3
// 0
// 3
// [ '0', '3' ]
// 4
// 0 undefined undefined
