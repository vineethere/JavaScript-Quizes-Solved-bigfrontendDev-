// https://bigfrontend.dev/quiz/Hoisting-II

const func1 = () => console.log(1)

func1()

func2()

function func2() {
  console.log(2)
}


func3()

var func3 = function func4() {
  console.log(3)
}




When code runs:
func1 is assigned a function.
func1() runs and prints 1.
func2() runs and prints 2.
func3() is called but func3 is undefined → causes a TypeError.
Then func3 is assigned the function expression.
Important points to remember:
Function declarations are fully hoisted.
Variables declared with var are hoisted but initialized as undefined.
Variables declared with let and const are NOT hoisted for use before declaration.
Function expressions assigned to var variables cannot be called before assignment.
Calling a variable holding undefined as a function causes a TypeError.
Tips:
Use function declarations if you need functions available anywhere in scope.
Prefer let and const over var to avoid hoisting confusion.
Don’t call functions or variables before they are declared or assigned unless you know they are hoisted.
Remember:
"Hoisting lifts declarations, but NOT initializations."



//SOLUTION:

// 1
// 2
// ERROR!
// /tmp/7uHtyzi6C9/main.js:12
// func3()
// ^

// TypeError: func3 is not a function
