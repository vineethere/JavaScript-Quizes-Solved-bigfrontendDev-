
// https://bigfrontend.dev/quiz/constructor
function A() {
  this.dev1 = 'BFE'
  this.dev2 = 'dev'
  return {
    dev1: 'bigfrontend'
  }
}

const a = new A()
console.log(a.dev1)
console.log(a.dev2)





// When you use new A():
// A new empty object is created.
// this inside A refers to that new object.
// The properties dev1 and dev2 are assigned to this (the new object).
// So the new object now has { dev1: 'BFE', dev2: 'dev' }.
// The function A returns an explicit object: { dev1: 'bigfrontend' }.
// Important JS rule:
// When a constructor function explicitly returns an object, that object replaces the newly created object.
// If it returns a primitive or nothing, the new object is used.
// So in this case:
// The return { dev1: 'bigfrontend' } means the new object returned by new A() is this returned object, not the one with dev1: 'BFE' and dev2: 'dev'.
// Hence, a is { dev1: 'bigfrontend' }.


// Solution
// bigfrontend
// undefined
